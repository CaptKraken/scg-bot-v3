// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("CONNECTION_STRING")
}

enum Role{
  USER
  ADMIN
}

model Person {
  id              Int        @id
  name            String     @db.VarChar(255)
  role            Role
  readerInfo      Reader?
  createdAt       DateTime?   @default(now())
  updatedAt       DateTime?   @updatedAt
  @@map("people")
}

model Reader {
  id              Int        @id @default(autoincrement())
  readerName      String     @db.VarChar(255) @unique
  person          Person     @relation(fields: [accountId], references: [id], onDelete: Cascade)
  accountId       Int        @unique
  lastMessageId   Int?        @default(0)
  readCount       Int?        @default(0)
  createdAt       DateTime?  @default(now())
  updatedAt       DateTime?  @updatedAt
  @@map("readers")
}

model Group {
  id              Int        @id
  name            String     @db.VarChar(255)
  dayCount        DayCount[]
  folders         Folder[]
  createdAt       DateTime?   @default(now())
  updatedAt       DateTime?   @updatedAt
  @@map("groups")
}

model DayCount {
  id              Int        @id @default(autoincrement())
  groupId         Int
  group           Group      @relation(fields: [groupId], references: [id], onDelete: Cascade)
  dayCount        Int?        @default(0)
  schedule        String?     @db.VarChar(255) @default("0 0 * * *") 
  message         String?     @db.VarChar(255) @default("ថ្ងៃទី {day_count}")
  createdAt       DateTime?   @default(now())
  updatedAt       DateTime?   @updatedAt
  @@map("day_counts")
}

model Folder {
  id              Int        @id @default(autoincrement())
  name            String     @db.VarChar(255) @unique
  groups          Group[]
  createdAt       DateTime?   @default(now())
  updatedAt       DateTime?   @updatedAt
  @@map("folders")
}

model Quote {
  id              Int        @id @default(autoincrement())
  text            String     @unique
  createdAt       DateTime?   @default(now())
  updatedAt       DateTime?   @updatedAt
  @@map("quotes")
}